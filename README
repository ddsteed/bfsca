BFsca FAQ

Hao Feng (RDS)

Aug. 2005

This document is intended to answer questions that are likely to be frequently
asked by users of BFsca.

-------------------------------------------------------------------------------
 Table of Contents

 1. General_Information

    1.1. What_is_BFsca?

    1.2. What_are_the_requirements_to_run_BFsca?

    1.3. How_do_I_install_BFsca?

2. Program_Information

   2.1. Architecture

-------------------------------------------------------------------------------
Chapter 1. General Information

1.1. What is BFsca?

BFsca is a package to calculate the ro-vibrationally
	Integrated Cross Sections        (ICS),
	Momentum Transfer Cross Sections (MCS),
	Differential Cross Sections      (DCS) 
of incident electron and 
	homonuclear diatomic molecule
	heteronuclear diatomic molecule (Unfinished)
	linear polyatomic molecule      (Not tested)
based on Body Frame (BF) Equations.


It can do
  ** e+mol static potential
  ** rigid rotor with Exact Exchange (EE) based on Linear Algebraic (LA)
     method
  ** vibrationally scattering with Tuned Free-Electron-Gas Exchange
     (TFEGE) based on Integral Equations (IE)
  ** vibrationally scattering with EE basedon LA
  ... ... ...

-------------------------------------------------------------------------------
1.2. What are the requirements to run BFsca?

1) BFsca package is developed on a Unix-like platform (GNU/Linux,
FreeBSD, Solaris, etc.). Most of source codes are written in FORTRAN. So
at leat one of FORTRAN compilers is necessary. (RDS recommends f77 so
that one can use Makefile and setup directly.)

2) BFsca is self-consistent except that the electronic eigenvectors and
eigen energies of the target, the polarization potential (BTAD/DSG/...),
the vibrational wavefunctions of the target other than SHO/SPFD, are
prepared by outer programs.

3) The tempoaray coupled exchange kernel files are VERY HUGE so the
large capacity disk are needed.

-------------------------------------------------------------------------------

1.3. How do I install BFsca?

* If you have f77 compiler, you can run './setup' directly.
* If you have 
    g77 xlf frt pgf77 fort77 fl32 af77 f90 xlf90 pgf90 epcf90 f95 fort
    xlf95 ifc efc pgf95 lf95 gfortran 
  you can run './setup' directly, too

* Otherwise, if you have GNU/autoconf/automake, you can modify
  'configure.ac' and run  
      aclocal
      autoconf
      automake --add-missing
      ./setup

* Otherwise, you have to compile src/*.f manually and copy the binary
  codes to bin/.

* you can run (aclocal, autoconf and automake must be excuted firstly)
    make install   --- install binary codes
    make uninstall --- uninstall binary codes
    make clean     --- clean src/
    make distclean --- clean all auxilary files generated by ./setup

    make distcheck --- package all necessary files

-------------------------------------------------------------------------------
Chapter 2. Program Information

2.1. Architecture

    ./aclocal.m4
    ./autom4te.cache
    ./configure
    ./configure.ac
    ./Makefile.am
    ./Makefile.in
    ./install-sh
    ./missing		auxiliary compiling files

    ./README		This file
    ./clean		clean up all temporary files and some results     
    ./setup		install all source codes
    ./package           make whole package to backup

    ./bin/		binary codes
    ./doc/		documents
    ./lib/             	library to help to calculate LAVIB
    ./run/		overall shell scripts 

    	tot_vib.s	overall shell script to do all vib. coupling work.
			e.g., you can type: 
			    tot_vib.s N2 pg 
			to calculate e-N2 for pi_g symmetry.
    			
    	tot_rr.s	overall shell script to do all Rigid-Rotor work.
			e.g., you can type: 
			    tot_rr.s N2 2.020
			to calculate e-N2 for R = 2.020 a_0 RR cal. 
    			
	alamn.s		run code alamn.f to get the charge density,
			a_lambda coefficients, and the MO
			expansion coefficients of a AB molecule 

	vstat.s		Run vlam.f to compute Legendre coefficients of
			static potential for electron collisions
			with AB and triatomic molecule from
			Legendre expansion coefficients of the
			target charge density in a single center
			representation. 

	vpola.s		using (cubic spline or polynomial fit) fitpol.f
			to interpolate polarization potentials
			from a set of original polarization
			numerical data

	addpots.s       add the polarization potential to the static
			potential for a list of R values

	wlut.s		run the wlut.f to reorder the potential files
			(all the lambdas for a given r first,
			then all the lambdas for the next r)

	spfd.s		run the spfdfit.f to calculate the
			SIMONS-PARR-FINLAN-DUNHAM potential
			paramenters for the input potentials of
			nuclear motion

	mpmom.s        using mpmom.f to calculate the multipole moments
		       (Q, A_0, A_2, D, etc.)

	wlam.s	        using wlam.f to calculate vibrational coupled
			multipole moments, static(+pol.)
			potentials and exchange kernel.

	vibker.s	using vibker.f to calculate the exchange
			kernels for all of R values

	lavib.s		using lavib.f/rclosure.f to calculate LAVIB for
			the non-RR case	

    
    ./src/		source codes

         alam		charge density --- A_lambda coefficients, MO
	 		expansion coefficients

	 vlam		Legendre coefficients of static potential

	 fitpol.f 

	 addpots.f

	 wlut.f	          
	 
	 spfdfit.f

	 mpmom.f

	 wlam.f

	 vibker.f

	 lavib.f
	 
