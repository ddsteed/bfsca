#!/usr/bin/env bash
#
#--------------------------------------------------------------------------------
#  Interpolate polarization potentials in terms of static potential mesh
#
#  RDS (Hao Feng)
#  Jun 24, 2013
#
# ---
#  Usage:
#    fitpol -t N2 -p DSG -basis ACCQ -R 2.02 -ref HF
#
#--------------------------------------------------------------------------------
#--- options
function handle_opt {
    while test "x$1" != "x"; do
	case $1 in
	    -t)     shift; tgt=$1      ;;
	    -p)     shift; pot=$1      ;;
	    -basis) shift; basis=$1    ;;
	    -R)     shift; CRD=$1      ;;
	    -ref)   shift; ref=$1      ;;
	    *)                         ;;
	esac
	shift
    done

    if [ "$tgt" == ""    ]; then tgt=H2;     fi
    if [ "$pot" == ""    ]; then pot=DSG;    fi
    if [ "$basis" == ""  ]; then basis=CCD;  fi
    if [ "$CRD" == ""    ]; then CRD=1.400;  fi
    if [ "$ref" == ""    ]; then ref=HF;     fi

# - echo OPTIONS
    echo " The command is: "
    echo "     $0 -t $tgt -p $pot -basis $basis -R $CRD -ref $ref"
    echo
}

#--------------------------------------------------------------------------------
#--- locations
function set_location {
    work="/Users/fenghao/home1/feng/scatt/bfsca/work"
    storeT="/Users/fenghao/home1/feng/scatt/bfsca/store"
    store="$storeT/vpol/$tgt/$ref/$pot/$basis"
    datain="$storeT/vpol/$tgt/POT_ORI/$ref/$pot/$basis"
    datast="$storeT/vstat/$tgt/$ref/$pot/$basis"
}

#--------------------------------------------------------------------------------
#--- cd work directory
#
function cd_work {
    curr=`pwd`
    if [ -d $work ]; then
	rm -f   $work/*
	ln -s   $curr/../bin/fitpol.x   $work/.
	cd      $work
    else
	echo "$work does NOT exit!"
	exit
    fi
}

#--------------------------------------------------------------------------------
#--- make input file
#
function make_inp {
    input=$1
    cp    $datain/V_$lambda.R$CRD vpol

    x1=`head -n 1 vpol | awk '{print $1}'`
    x2=`tail -n 1 vpol | awk '{print $1}'`
    nin=`wc -l    vpol | awk '{print $1}'`

    echo "$x1  $x2  $nin" > $input
    echo $lambda         >> $input
    cat  vpol            >> $input
}

#--------------------------------------------------------------------------------
#--- MAIN FUNCTION
#
handle_opt $@

set_location
cd_work

ln -s $datast/vstR${CRD}.dat  fort.3
for lambda in 0 2; do
    make_inp $tgt.inp 

    $work/fitpol.x < $tgt.inp > $tgt.out

    cp  fort.8  polL$lambda
    cp  fort.9  polV$lambda

    if [[ $lambda -ne 0 ]]; then cat polV$lambda  >> polL0; fi
done

cp   polL0   $store/polR${CRD}.dat
